//=----------------------------------------------------------------------------=
// This source file is part of the Ultimathnum open source project.
//
// Copyright (c)  2023 Oscar BystrÃ¶m Ericsson
// Licensed under Apache License, Version 2.0
//
// See http://www.apache.org/licenses/LICENSE-2.0 for license information.
//=----------------------------------------------------------------------------=

//*============================================================================*
// MARK: * Bit x Count
//*============================================================================*

extension Bit {
    
    //*========================================================================*
    // MARK: * Ascending
    //*========================================================================*
    
    @frozen public struct Ascending {
        
        //=--------------------------------------------------------------------=
        // MARK: State
        //=--------------------------------------------------------------------=
        
        public let bit: Bit
        
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init(_ bit: Bit) {
            self.bit = bit
        }
        
        @inlinable public static func ascending(_ bit: Bit) -> Self {
            Self(bit)
        }
    }
    
    //*========================================================================*
    // MARK: * Ascending x Inverse
    //*========================================================================*
    
    @frozen public struct Nonascending {
        
        //=--------------------------------------------------------------------=
        // MARK: State
        //=--------------------------------------------------------------------=
        
        public let bit: Bit
        
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init(_ bit: Bit) {
            self.bit = bit
        }
        
        @inlinable public static func nonascending(_ bit: Bit) -> Self {
            Self(bit)
        }
    }
    
    //*========================================================================*
    // MARK: * Appendix
    //*========================================================================*
    
    @frozen public struct Appendix {
        
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init() {
            
        }
        
        @inlinable public static var appendix: Self {
            Self()
        }
    }

    //*========================================================================*
    // MARK: * Appendix x Inverse
    //*========================================================================*

    @frozen public struct Nonappendix {
                
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init() {
            
        }
        
        @inlinable public static var nonappendix: Self {
            Self()
        }
    }
    
    //*========================================================================*
    // MARK: * Descending
    //*========================================================================*
    
    @frozen public struct Descending {
                
        //=--------------------------------------------------------------------=
        // MARK: State
        //=--------------------------------------------------------------------=
        
        public let bit: Bit
        
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init(_ bit: Bit) {
            self.bit = bit
        }
        
        @inlinable public static func descending(_ bit: Bit) -> Self {
            Self(bit)
        }
    }
    
    //*========================================================================*
    // MARK: * Descending x Inverse
    //*========================================================================*
    
    @frozen public struct Nondescending {
                
        //=--------------------------------------------------------------------=
        // MARK: State
        //=--------------------------------------------------------------------=
        
        public let bit: Bit
        
        //=--------------------------------------------------------------------=
        // MARK: Initializers
        //=--------------------------------------------------------------------=
        
        @inlinable public init(_ bit: Bit) {
            self.bit = bit
        }
        
        @inlinable public static func nondescending(_ bit: Bit) -> Self {
            Self(bit)
        }
    }
}
